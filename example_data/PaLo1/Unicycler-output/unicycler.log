
Starting Unicycler (2019-09-24 20:40:05)
----------------------------------------
    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you provided both short and long reads, Unicycler will perform a hybrid assembly. It will first use SPAdes to make a short-read assembly graph, and then it will use various methods to scaffold that graph with the long reads.
    For more information, please see https://github.com/rrwick/Unicycler

Command: /home/r0611244/anaconda2/envs/snakemake/bin/unicycler -t 16 -1 illumina/clean/PaLo1/PaLo1R1.fastq.gz -2 illumina/clean/PaLo1/PaLo1R2.fastq.gz -s illumina/clean/PaLo1/PaLo1.unpaired.fastq.gz -l nanopore/PaLo1.trim.fastq -o assembly/unicycler/PaLo1

Unicycler version: v0.4.7
Using 16 threads

The output directory already exists:
  /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1

Dependencies:
  Program         Version             Status  
  spades.py       3.13.1              good    
  racon           1.4.3               good    
  makeblastdb     2.5.0+              good    
  tblastn         2.5.0+              good    
  bowtie2-build   2.3.4.3             good    
  bowtie2         2.3.4.3             good    
  samtools        1.9                 good    
  java            1.8.0_152-release   good    
  pilon           1.23                good    
  bcftools                            not used


SPAdes read error correction (2019-09-24 20:40:22)
--------------------------------------------------
    Unicycler uses the SPAdes read error correction module to reduce the number of errors in the short read before SPAdes assembly. This can make the assembly faster and simplify the assembly graph structure.

Command: /home/r0611244/anaconda2/envs/snakemake/bin/spades.py -1 /home/r0611244/Desktop/crispr_annotation/illumina/clean/PaLo1/PaLo1R1.fastq.gz -2 /home/r0611244/Desktop/crispr_annotation/illumina/clean/PaLo1/PaLo1R2.fastq.gz -s /home/r0611244/Desktop/crispr_annotation/illumina/clean/PaLo1/PaLo1.unpaired.fastq.gz -o /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/spades_assembly/read_correction --threads 16 --only-error-correction

Corrected reads:
  /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/spades_assembly/corrected_1.fastq.gz
  /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/spades_assembly/corrected_2.fastq.gz
  /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/spades_assembly/corrected_u.fastq.gz


Choosing k-mer range for assembly (2019-09-24 20:49:17)
-------------------------------------------------------
    Unicycler chooses a k-mer range for SPAdes based on the length of the input reads. It uses a wide range of many k-mer sizes to maximise the chance of finding an ideal assembly.

SPAdes maximum k-mer: 127
Median read length: 150
K-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127


SPAdes assemblies (2019-09-24 20:49:33)
---------------------------------------
    Unicycler now uses SPAdes to assemble the short reads. It scores the assembly graph for each k-mer using the number of contigs (fewer is better) and the number of dead ends (fewer is better). The score function is 1/(c*(d+2)), where c is the contig count and d is the dead end count.

K-mer   Contigs   Dead ends   Score   
   27                           failed
   47                           failed
   63                           failed
   77                           failed
   89                           failed
   99                           failed
  107                           failed
  115                           failed
  121                           failed
  127       217          96   4.70e-05 <-best

Deleting /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/spades_assembly/


Determining graph multiplicity (2019-09-24 20:52:46)
----------------------------------------------------
    Multiplicity is the number of times a sequence occurs in the underlying sequence. Single-copy contigs (those with a multiplicity of one, occurring only once in the underlying sequence) are particularly useful.

Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/001_best_spades_graph.gfa


Cleaning graph (2019-09-24 20:52:46)
------------------------------------
    Unicycler now performs various cleaning procedures on the graph to remove overlaps and simplify the graph structure. The end result is a graph ready for bridging.

Graph overlaps removed

Removed zero-length segments:
    185, 192, 194, 203, 214, 215, 216

Merged small segments:
    208, 210, 212, 213

Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/002_overlaps_removed.gfa

    Unicycler now selects a set of anchor contigs from the single-copy contigs. These are the contigs which will be connected via bridges to form the final assembly.

91 anchor segments (6,455,110 bp) out of 206 total segments (6,532,609 bp)


Creating SPAdes contig bridges (2019-09-24 20:52:46)
----------------------------------------------------
    SPAdes uses paired-end information to perform repeat resolution (RR) and produce contigs from the assembly graph. SPAdes saves the graph paths corresponding to these contigs in the contigs.paths file. When one of these paths contains two or more anchor contigs, Unicycler can create a bridge from the path.

                                                                                    Bridge
Start                                 Path                                 End     quality
  -49                                 -109                                 74         24.1
  -24                                 184                                  30         62.9
  -12                                 -170                                 35         63.1
    1                          181 -> 123 -> 181                           42         17.1
    2                       190 -> 178 -> 182 -> 195                       -7         60.8
    5   188 -> 193 -> -183 -> 204 -> -178 -> -190 -> 196 -> 192 -> -149    67         30.4
    9                                 -198                                 60         55.2
   14                                 170                                  43         62.5
   41                          151 -> -155 -> 139                          31         30.4
   46                          151 -> -156 -> 139                          -62        26.1
   57                             -179 -> 166                              -84        58.9
   67   173 -> 149 -> -192 -> -185 -> 178 -> 182 -> -194 -> -188 -> -197   7          25.2
   70                       173 -> 149 -> 143 -> 183                       17         29.3


Creating loop unrolling bridges (2019-09-24 20:52:46)
-----------------------------------------------------
    When a SPAdes contig path connects an anchor contig with the middle contig of a simple loop, Unicycler concludes that the sequences are contiguous (i.e. the loop is not a separate piece of DNA). It then uses the read depth of the middle and repeat contigs to guess the number of times to traverse the loop and makes a bridge.

                                  Loop count   Loop count    Loop    Bridge
Start   Repeat   Middle     End    by repeat    by middle   count   quality
    1      181      123      42         0.92         0.60       1      36.1
  -49     -109       74     -89         0.25         0.84       1      20.9


Loading reads (2019-09-24 20:52:46)
-----------------------------------
8,518 / 8,518 (100.0%) - 96,526,074 bp


Assembling contigs and long reads with miniasm (2019-09-24 20:52:47)
--------------------------------------------------------------------
    Unicycler uses miniasm to construct a string graph assembly using both the short read contigs and the long reads. It will then use the resulting string graph to produce bridges between contigs. This method requires decent coverage of long reads and therefore may not be fruitful if long reads are sparse. However, it does not rely on the short read assembly graph having good connectivity and is able to bridge an assembly graph even when it contains many dead ends.
    Unicycler uses two types of "reads" as assembly input: anchor contigs from the short-read assembly and actual long reads which overlap two or more of these contigs. It then assembles them with miniasm.

Aligning long reads to graph using minimap

Saving to /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/miniasm_assembly/01_assembly_reads.fastq:
  90 short-read contigs
  1,353 long reads

Finding overlaps with minimap... 
success
  26,737 overlaps

Assembling reads with miniasm... 
success
  319 segments, 319 links

Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/miniasm_assembly/11_branching_paths_removed.gfa
Merging segments into unitigs:
  1 circular unitig
  total size = 6,531,185 bp
Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/miniasm_assembly/12_unitig_graph.gfa


Polishing miniasm assembly with Racon (2019-09-24 20:53:14)
-----------------------------------------------------------
    Unicycler now uses Racon to polish the miniasm assembly. It does multiple rounds of polishing to get the best consensus. Circular unitigs are rotated between rounds such that all parts (including the ends) are polished well.

Saving to /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/miniasm_assembly/racon_polish/polishing_reads.fastq:
  90 short-read contigs
  8,518 long reads

Polish       Assembly          Mapping
round            size          quality
begin       6,531,185         4,950.66
1           6,591,519         5,689.61
2           6,592,666         5,692.29
3           6,592,734         5,701.99
4           6,592,799         5,695.14

Best polish: /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/miniasm_assembly/racon_polish/016_rotated.fasta
Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/miniasm_assembly/13_racon_polished.gfa
Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/003_long_read_assembly.gfa

    Contigs in the short-read assembly graph which end in dead ends may contain bogus sequence near the dead end. Unicycler therefore uses the read clipping values from the miniasm assembly to trim these dead ends to only the parts which aligned well to long reads.

                       Trimmed   Trimmed             
            Previous      from      from        Final
Segment       length     start       end       length
10           158,269         4         -      158,265
11           157,163         4         1      157,158
12           148,240         -         4      148,236
13           145,631         -         1      145,630
15           138,864         1         4      138,859
17           122,724         -         3      122,721
18           121,961         -         4      121,957
19           121,532         -         3      121,529
1            320,206         1         -      320,205
21           105,400         2         -      105,398
22           101,983         -         4      101,979
23           100,257         3         -      100,254
25            97,388         2         2       97,384
26            95,848         -         2       95,846
27            95,467         -         4       95,463
28            91,193         1         -       91,192
29            89,567         1         -       89,566
2            257,609         1         -      257,608
33            81,841         1         -       81,840
34            79,330         -         2       79,328
36            71,116         2         -       71,114
38            65,381         -         1       65,380
39            62,348         -         1       62,347
3            243,778         3         -      243,775
44            55,327         1         -       55,326
47            51,165         3         2       51,160
4            210,119         -         4      210,115
50            46,410         -         1       46,409
51            45,336         -         4       45,332
52            43,436         -         7       43,429
53            42,843        12         3       42,828
54            42,612         2         6       42,604
55            41,802         2         -       41,800
56            41,193         -         3       41,190
58            36,122         1         4       36,117
59            35,735         4         -       35,731
5            186,063         4         -      186,059
61            30,575         -         4       30,571
62            29,716         2         -       29,714
63            29,258         3         1       29,254
64            29,103         1         3       29,099
68            24,321         2         -       24,319
6            183,735         2         4      183,729
70            21,487         1         -       21,486
71            20,076         3         3       20,070
72            17,166         1         1       17,164
73            16,721         1         3       16,717
76             9,321         -         2        9,319
78             6,223         2         2        6,219
80             5,497         -         1        5,496
85             3,866         2         -        3,864
87             3,279         4         -        3,275
8            163,561         -         3      163,558

    Unicycler now places the single copy contigs back into the unitig graph. This serves two purposes: a) it replaces long read assembly sequences (which may be error prone) with Illumina assembly sequence (which is probably quite accurate), improving the assembly quality, and b) it defines inter-contig sequences for use in building bridges.

Searching for contigs using 5,000 bp of contig ends.

Contig   Result              Start pos   End pos   Strand
     1   found in unitig 1     1785109   2104962        -
     2   found in unitig 1     5376547   5633922        +
     3   found in unitig 1     4776095   5019383        -
     4   found in unitig 1     2331682   2541670        +
     5   found in unitig 1     2902902   3088831        +
     6   found in unitig 1     3775743   3959322        -
     7   found in unitig 1     5634359   5802268        -
     8   found in unitig 1     3321041   3484486        -
     9   found in unitig 1     4424528   4587428        +
    10   found in unitig 1     1179992   1338568        -
    11   found in unitig 1     6246624   6403691        +
    12   found in unitig 1     5912232   6060691        +
    13   found in unitig 1     5213610   5359172        +
    14   found in unitig 1     3179934   3320933        -
    15   found in unitig 1     2541746   2680537        -
    16   found in unitig 1      504045    639693        +
    17   found in unitig 1     6403812   6526475        -
    18   found in unitig 1     3636921   3758811        +
    19   found in unitig 1     3515372   3636809        +
    20   found in unitig 1     5046377   5159727        +
    21   found in unitig 1     1052351   1157705        +
    22   found in unitig 1     4312064   4413967        +
    23   found in unitig 1     2134303   2234495        +
    24   found in unitig 1      236312    334311        -
    25   found in unitig 1     6149087   6246495        -
    26   found in unitig 1      777337    873120        -
    27   found in unitig 1     3959398   4054829        -
    28   found in unitig 1      924856   1015992        -
    29   found in unitig 1     4179949   4269447        -
    30   found in unitig 1      334447    423738        +
    31   found in unitig 1     4680839   4769880        +
    32   found in unitig 1      639838    725966        -
    33   found in unitig 1     6060837   6142620        +
    34   found in unitig 1     2794158   2873425        +
    35   found in unitig 1     5833421   5912032        -
    36   found in unitig 1     1623203   1694275        +
    37   found in unitig 1     4100786   4166199        +
    38   found in unitig 1     1557743   1623084        +
    39   found in unitig 1     1492864   1555183        -
    40   found in unitig 1     2731158   2792183        -
    41   found in unitig 1     4620335   4679818        +
    42   found in unitig 1     1725850   1784093        -
    43   found in unitig 1     3122063   3179736        -
    44   found in unitig 1     1338665   1393960        +
    45   found in unitig 1     2276103   2329123        +
    46   found in unitig 1      181947    234455        -
    47   found in unitig 1      726083    777200        +
    48   found in unitig 1     1394664   1443773        +
    49   found in unitig 1      429956    477636        -
    50   found in unitig 1        -596     45794        +
    51   found in unitig 1      876357    921642        -
    52   found in unitig 1     1449288   1492700        -
    53   found in unitig 1     6549221   6592035        +
    54   found in unitig 1     5162188   5204766        +
    55   found in unitig 1      109349    151122        -
    56   found in unitig 1     4269863   4311047        -
    57   found in unitig 1     2687283   2725628        -
    58   found in unitig 1     1016106   1052192        -
    59   found in unitig 1       66123    101830        +
    60   found in unitig 1     4587505   4619623        +
    61   found in unitig 1     3484622   3515176        -
    62   found in unitig 1      151230    180920        +
    63   found in unitig 1     2873547   2902771        +
    64   found in unitig 1     2105075   2134154        -
    65   found in unitig 1     5803500   5832406        -
    66   found in unitig 1     1697679   1725795        -
    67   found in unitig 1     3089836   3116837        +
    68   found in unitig 1     5019529   5043838        +
    69   found in unitig 1     2250578   2272871        +
    70   found in unitig 1     6527471   6548944        -
    71   found in unitig 1       45934     65994        -
    72   found in unitig 1     5359276   5376425        +
    73   found in unitig 1     3758945   3775650        -
    74   found in unitig 1      478796    494129        +
    75   found in unitig 1     4085121   4100081        +
    76   found in unitig 1     4414053   4423366        -
    77   found in unitig 1     2234608   2241205        +
    78   found in unitig 1     6142744   6148962        -
    80   found in unitig 1     5204899   5210388        -
    81   found in unitig 1      104208    109023        +
    82   found in unitig 1     4059922   4064253        +
    84   found in unitig 1     2683021   2686902        +
    85   found in unitig 1     3118069   3121927        -
    86   found in unitig 1     1166588   1170070        +
    87   found in unitig 1     4074246   4077510        +
    88   found in unitig 1     4067723   4070992        +
    89   found in unitig 1      495286    498324        -
    90   found in unitig 1     4078693   4081695        -
    91   found in unitig 1     4175821   4178695        -
   187   not found                                       

Searching for contigs using 2,500 bp of contig ends.

Contig   Result      Start pos   End pos   Strand
   187   not found                               

Searching for contigs using 1,000 bp of contig ends.

Contig   Result      Start pos   End pos   Strand
   187   not found                               

Searching for contigs using 500 bp of contig ends.

Contig   Result      Start pos   End pos   Strand
   187   not found                               

Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/miniasm_assembly/15_contigs_placed.gfa


Creating miniasm/Racon bridges (2019-09-24 20:55:55)
----------------------------------------------------
    Now that the miniasm/Racon string graph is complete, Unicycler will use it to build bridges between anchor segments.

       Start -> end    Best path                                 Quality
 1/89    50 -> -71                                                95.968
 2/89   -49 -> 74      -109                                       76.999
 3/89    74 -> -89     -109                                       68.807
 4/89   -89 -> 16      201, 79, -168                              41.519
 5/89    16 -> -32                                                96.583
 6/89   -32 -> 47                                                 98.770
 7/89    47 -> -26                                                97.982
 8/89   -26 -> -51                                                77.024
 9/89   -51 -> -28     145, 199, -162, -144, 115, -152, -113      74.249
10/89   -28 -> -58                                                98.800
11/89   -58 -> 21                                                 98.378
12/89   -71 -> 59                                                 97.858
13/89    21 -> 86      191, 105, -164, 191, 105, -164, -95,       29.976
                       142, -110, 107, -169, -164, 191                  
14/89    86 -> -10     -110, -103, -92, 136, -167, -120, 99,      38.454
                       -160, 150, -146, 186                             
15/89   -10 -> 44                                                 98.285
16/89    44 -> 48      -126                                       93.402
17/89    48 -> -52                                                68.175
18/89   -52 -> -39                                                95.029
19/89   -39 -> 38      199, -162, 104, -140, -154                 81.231
20/89    38 -> 36                                                 98.646
21/89    36 -> -66     -102, -127, -114                           74.935
22/89   -66 -> -42                                                97.258
23/89    59 -> 81      100, 171, -148                             72.200
24/89   -42 -> -1      -181, -123, -181                           91.063
25/89    -1 -> -64                                                98.311
26/89   -64 -> 23                                                 95.434
27/89    23 -> 77                                                 88.978
28/89    77 -> 69      168, -79, -94, -138, 121                   57.369
29/89    69 -> 45      101, 177, 200, 197, 188, -195, -182,       77.695
                       -178, 185, 192, -149, -173                       
30/89    45 -> 4                                                  67.770
31/89     4 -> -15                                                99.204
32/89   -15 -> 84                                                 79.672
33/89    84 -> -57     -166, 179                                  89.759
34/89    81 -> -55     148                                        79.451
35/89   -57 -> -40     203, -79, -201                             68.782
36/89   -40 -> 34      101, 177                                   83.052
37/89    34 -> 63                                                 97.622
38/89    63 -> 5                                                  92.905
39/89     5 -> 67      188, 193, -183, 204, -178, -190, 196,      89.867
                       192, -149                                        
40/89    67 -> -85     173, 149, -192, -185, 178, 182, -194,      27.799
                       -188, -197                                       
41/89   -85 -> -43                                                27.782
42/89   -43 -> -14     -170                                       96.959
43/89   -14 -> -8                                                 98.208
44/89    -8 -> -61                                                96.142
45/89   -55 -> 62                                                 94.284
46/89   -61 -> 19                                                 93.303
47/89    19 -> 18                                                 93.268
48/89    18 -> -73                                                98.682
49/89   -73 -> -6                                                 99.027
50/89    -6 -> -27                                                97.248
51/89   -27 -> 82                                                 57.855
52/89    82 -> 88      167, -137, 92                              65.199
53/89    88 -> 87                                                 27.011
54/89    87 -> -90     188, 194, -182, -178, 185, 192, -149,      72.123
                       -173                                             
55/89   -90 -> 75      114, -128, 102                             34.229
56/89    62 -> -46     -139, 156, -151                            78.017
57/89    75 -> 37      126                                        93.242
58/89    37 -> -91                                                45.599
59/89   -91 -> -29     -106                                       86.916
60/89   -29 -> -56                                                93.718
61/89   -56 -> 22      -111                                       89.007
62/89    22 -> -76                                                99.015
63/89   -76 -> 9       -121, 138                                  86.055
64/89     9 -> 60      -198, -198                                 98.326
65/89    60 -> 41      -124                                       93.448
66/89    41 -> 31      151, -155, 139                             90.955
67/89   -46 -> -24     100                                        79.722
68/89    31 -> -3      125, 135, 83, -132, -158                   66.461
69/89    -3 -> 68                                                 95.418
70/89    68 -> 20      -162, 104, 141, -154                       80.995
71/89    20 -> 54                                                 79.177
72/89    54 -> -80                                                97.935
73/89   -80 -> 13      145, 199, -162, -144, 115, 153, -113       74.264
74/89    13 -> 72                                                 98.970
75/89    72 -> 2                                                  98.421
76/89     2 -> -7      190, 178, 182, 195                         95.885
77/89    -7 -> -65     197, 188, 194, -182, -178, 185, 192,       88.832
                       -149, -173                                       
78/89   -24 -> 30      184                                        98.166
79/89   -65 -> -35     111                                        90.154
80/89   -35 -> 12      170                                        97.893
81/89    12 -> 33                                                 98.446
82/89    33 -> -78                                                92.770
83/89   -78 -> -25                                                94.177
84/89   -25 -> 11                                                 98.716
85/89    11 -> -17                                                98.766
86/89   -17 -> -70     -183, -143, -149, -173                     86.449
87/89   -70 -> 53                                                 91.951
88/89    53 -> 50                                                 97.478
89/89    30 -> -49     158, -133, -83, 134, -125                  66.183


Creating simple long read bridges (2019-09-24 20:55:59)
-------------------------------------------------------
    Unicycler uses long read alignments (from minimap) to resolve simple repeat structures in the graph. This takes care of some "low-hanging fruit" of the graph simplification.

Aligning long reads to graph using minimap

    Two-way junctions are defined as cases where two graph contigs (A and B) join together (C) and then split apart again (D and E). This usually represents a simple 2-copy repeat, and there are two possible options for its resolution: (A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a junction gets to "vote" for option 1, option 2 or neither. Unicycler creates a bridge at each junction for the most voted for option.

                                                     Op. 1   Op. 2   Neither   Final    Bridge
Junction        Option 1             Option 2        votes   votes     votes     op.   quality
     109   -74 -> 109 -> -74,   -74 -> 109 -> 49,        0      26         0       2      76.4
            89 -> 109 -> 49      89 -> 109 -> -74                                             
     111   -65 -> 111 -> -35,   -65 -> 111 -> 56,       22       0         0       1      97.6
            -22 -> 111 -> 56    -22 -> 111 -> -35                                             
     126   -48 -> 126 -> -44,   -48 -> 126 -> 37,       29       0         0       1      99.6
            75 -> 126 -> 37      75 -> 126 -> -44                                             

    Simple loops are parts of the graph where two contigs (A and B) are connected via a repeat (C) which loops back to itself (via D). It is possible to traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times (A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the correct number of times through. In this step, such reads are found and each is aligned against alternative loop counts. A reads casts its "vote" for the loop count it agrees best with, and Unicycler creates a bridge using the most voted for count.

                                   Read                         Loop    Bridge
Start   Repeat   Middle     End   count   Read votes           count   quality
  -60      198               -9       2   0 loops: 1 vote        tie          
                                          1 loop: 1 vote        vote          
  -49     -109       74     -89       3   1 loop: 3 votes          1      52.2
    1      181      123      42      11   1 loop: 11 votes         1      99.9


Determining low score threshold (2019-09-24 20:56:56)
-----------------------------------------------------
    Before conducting semi-global alignment of the long reads to the assembly graph, Unicycler must determine a minimum alignment score threshold such that nonsense alignments are excluded. To choose a threshold automatically, it examines alignments between random sequences and selects a score a few standard deviations above the mean.

Automatically choosing a threshold using random alignment scores.

Random alignment mean score: 61.66
         standard deviation:  1.31
        Low score threshold: 61.66 + (7 x 1.31) = 70.86


Aligning reads (2019-09-24 20:56:57)
------------------------------------
8,518 / 8,518 (100.0%)


Read alignment summary (2019-09-24 21:10:36)
--------------------------------------------
Total read count:             8,518
Fully aligned reads:          7,260
Partially aligned reads:      1,230
Unaligned reads:                 28
Total bases aligned:     98,228,012 bp
Mean alignment identity:         88.4%

Deleting /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/read_alignment/


Building long read bridges (2019-09-24 21:10:36)
------------------------------------------------
    Unicycler uses the long read alignments to produce bridges between anchor segments. These bridges can be formed using as few as one long read, giving Unicycler the ability to bridge the graph even when long-read depth is low.

         Start -> end    Best path                                 Quality
  1/102    13 -> 2                                                  18.049
  2/102    22 -> 9                                                  13.356
  3/102    82 -> 87                                                  3.111
  4/102    33 -> -25                                                29.184
  5/102    57 -> 15                                                 24.203
  6/102    74 -> 16      -109, -89, 201, 79, -168                   57.441
  7/102    37 -> -29                                                13.158
  8/102    59 -> -55     100, 171, -148, 81, 148                    53.358
  9/102    54 -> 13                                                 27.587
 10/102    52 -> -48                                                30.916
 11/102    40 -> 57      201, 79, -203                              76.945
 12/102   -16 -> 89      168, -79, -201                             45.110
 13/102    67 -> -43                                                38.670
 14/102    31 -> -3      125, 135, 83, -132, -158                   87.907
 15/102    66 -> -36     114, 127, 102                              66.637
 16/102    28 -> 51      113, 152, -115, 144, 162, -199, -145       78.196
 17/102   -27 -> 82                                                 21.355
 18/102   -75 -> 90      -102, 128, -114                            34.850
 19/102    77 -> 69      168, -79, -94, -138, 121                   83.726
 20/102    87 -> 75      188, 194, -182, -178, 185, 192, -149,      23.083
                         -173, -90, 114, -128, 102                        
 21/102   -38 -> 39      154, 140, -104, 162, -199                  67.923
 22/102    49 -> -30     125, -134, 83, 133, -158                   88.728
 23/102    45 -> 4                                                  26.987
 24/102   -13 -> 80      113, -153, -115, 144, 162, -199, -145      75.379
 25/102    51 -> 26                                                 48.960
 26/102    68 -> 20      -162, 104, 141, -154                       83.935
 27/102   -15 -> 84                                                 49.260
 28/102    21 -> 86      191, 105, -164, 191, 105, -164, -95,       24.451
                         142, -110, 107, -169, -164, 191                  
 29/102    69 -> 45      101, 177, 200, 197, 188, -195, -182,       83.827
                         -178, 185, 192, -149, -173                       
 30/102    29 -> 91      106                                        78.684
 31/102    20 -> 54                                                 51.954
 32/102    24 -> 46      -100                                       81.887
 33/102    65 -> 7       173, 149, -192, -185, 178, 182, -194,      75.874
                         -188, -197                                       
 34/102   -34 -> 40      -177, -101                                 71.547
 35/102    90 -> -87     173, 149, -192, -185, 178, 182, -194,      62.801
                         -188                                             
 36/102    59 -> 81      100, 171, -148                             72.905
 37/102    88 -> 87                                                 15.466
 38/102    -9 -> 76      -138, 121                                  81.144
 39/102    41 -> 31      151, -155, 139                             76.878
 40/102     1 -> 42      181, 123, 181                              81.055
 41/102    89 -> -74     109                                        60.610
 42/102   -49 -> 74      -109                                       74.516
 43/102   -22 -> 56      111                                        86.447
 44/102    35 -> 65      -111                                       86.207
 45/102   -12 -> 35      -170                                       87.672
 46/102    81 -> -55     148                                        69.862
 47/102    56 -> 29                                                 85.335
 48/102    85 -> -67     197, 188, 194, -182, -178, 185, 192,       25.261
                         -149, -173                                       
 49/102    14 -> 43      170                                        66.668
 50/102   -19 -> 61                                                 86.864
 51/102    44 -> 48      -126                                       82.753
 52/102    84 -> -57     -166, 179                                  79.031
 53/102   189 -> -56                                                 7.496
 54/102   -53 -> 70                                                 84.067
 55/102   -21 -> 58                                                 87.708
 56/102    39 -> 52                                                 88.660
 57/102     7 -> -2      -195, -182, -178, -190                     85.520
 58/102    -3 -> 68                                                 89.070
 59/102    32 -> -16                                                75.913
 60/102   -23 -> 64                                                 89.546
 61/102    12 -> 33                                                 92.642
 62/102    71 -> -50                                                89.377
 63/102   -24 -> 30      184                                        89.242
 64/102    73 -> -18                                                91.249
 65/102    80 -> -54                                                88.336
 66/102    63 -> 5                                                  86.826
 67/102    61 -> 8                                                  90.214
 68/102   -11 -> 25                                                 91.770
 69/102    25 -> 78                                                 78.152
 70/102    78 -> -33                                                84.359
 71/102    34 -> 63                                                 91.106
 72/102    47 -> -26                                                92.376
 73/102   -29 -> 189                                                 8.971
 74/102   -59 -> 71                                                 90.817
 75/102    43 -> 85                                                 24.973
 76/102    38 -> 36                                                 92.957
 77/102    17 -> -11                                                92.884
 78/102    72 -> 2                                                  91.873
 79/102    58 -> 28                                                 88.672
 80/102    64 -> 1                                                  89.930
 81/102   -32 -> 47                                                 92.298
 82/102    23 -> 77                                                 78.162
 83/102    19 -> 18                                                 67.369
 84/102   -55 -> 62                                                 88.794
 85/102     8 -> 14                                                 88.923
 86/102   -10 -> 44                                                 92.782
 87/102    13 -> 72                                                 92.578
 88/102    76 -> -22                                                91.374
 89/102     6 -> 73                                                 92.970
 90/102    27 -> 6                                                  92.156
 91/102    42 -> 66                                                 91.691
 92/102    15 -> -4                                                 94.221
 93/102     9 -> 60      -198, -198                                 42.795
 94/102    53 -> 50                                                 92.051
 95/102     5 -> 67      188, 193, -183, 204, -178, -190, 196,      85.966
                         192, -149                                        
 96/102    70 -> 17      173, 149, 143, 183                         82.364
 97/102    60 -> 41      -124                                       72.893
 98/102    62 -> -46     -139, 156, -151                            74.813
 99/102    75 -> 37      126                                        82.737
100/102    91 -> -37                                                15.513
101/102    86 -> -10     -110, -103, -92, 136, -167, -120, 99,      56.715
                         -160, 150, -146, 186                             
102/102    82 -> 88      167, -137, 92                              65.254


Applying bridges (2019-09-24 21:10:46)
--------------------------------------
    Unicycler now applies to the graph in decreasing order of quality. This ensures that when multiple, contradictory bridges exist, the most supported option is used.

Bridge type        Start -> end   Path                                       Quality
simple long read      1 -> 42     181, 123, 181                               99.937
simple long read    -48 -> -44    126                                         99.778
simple long read     75 -> 37     126                                         99.607
miniasm               4 -> -15                                                99.204
miniasm             -73 -> -6                                                 99.027
miniasm              22 -> -76                                                99.015
miniasm              13 -> 72                                                 98.970
simple long read    -65 -> -35    111                                         98.906
miniasm             -28 -> -58                                                98.800
miniasm             -32 -> 47                                                 98.770
miniasm              11 -> -17                                                98.766
miniasm             -25 -> 11                                                 98.716
miniasm              18 -> -73                                                98.682
miniasm              38 -> 36                                                 98.646
miniasm              12 -> 33                                                 98.446
miniasm              72 -> 2                                                  98.421
miniasm             -58 -> 21                                                 98.378
miniasm               9 -> 60     -198, -198                                  98.326
miniasm              -1 -> -64                                                98.311
miniasm             -10 -> 44                                                 98.285
miniasm             -14 -> -8                                                 98.208
miniasm             -24 -> 30     184                                         98.166
miniasm              47 -> -26                                                97.982
miniasm              54 -> -80                                                97.935
miniasm             -35 -> 12     170                                         97.893
miniasm             -71 -> 59                                                 97.858
simple long read    -22 -> 56     111                                         97.649
miniasm              34 -> 63                                                 97.622
miniasm              53 -> 50                                                 97.478
miniasm             -66 -> -42                                                97.258
miniasm              -6 -> -27                                                97.248
miniasm             -43 -> -14    -170                                        96.959
miniasm              16 -> -32                                                96.583
miniasm              -8 -> -61                                                96.142
miniasm              50 -> -71                                                95.968
miniasm               2 -> -7     190, 178, 182, 195                          95.885
miniasm             -64 -> 23                                                 95.434
miniasm              -3 -> 68                                                 95.418
miniasm             -52 -> -39                                                95.029
miniasm             -55 -> 62                                                 94.284
miniasm             -78 -> -25                                                94.177
miniasm             -29 -> -56                                                93.718
miniasm              60 -> 41     -124                                        93.448
miniasm             -61 -> 19                                                 93.303
miniasm              19 -> 18                                                 93.268
miniasm              63 -> 5                                                  92.905
miniasm              33 -> -78                                                92.770
miniasm             -70 -> 53                                                 91.951
miniasm              41 -> 31     151, -155, 139                              90.955
miniasm               5 -> 67     188, 193, -183, 204, -178, -190, 196,       89.867
                                  192, -149                                         
miniasm              84 -> -57    -166, 179                                   89.759
miniasm              23 -> 77                                                 88.978
miniasm              -7 -> -65    197, 188, 194, -182, -178, 185, 192,        88.832
                                  -149, -173                                        
long read            49 -> -30    125, -134, 83, 133, -158                    88.728
long read            31 -> -3     125, 135, 83, -132, -158                    87.907
miniasm             -91 -> -29    -106                                        86.916
miniasm             -17 -> -70    -183, -143, -149, -173                      86.449
miniasm             -76 -> 9      -121, 138                                   86.055
simple long read    -74 -> 49     109                                         85.465
long read            68 -> 20     -162, 104, 141, -154                        83.935
long read            69 -> 45     101, 177, 200, 197, 188, -195, -182,        83.827
                                  -178, 185, 192, -149, -173                        
long read            77 -> 69     168, -79, -94, -138, 121                    83.726
miniasm             -40 -> 34     101, 177                                    83.052
long read            24 -> 46     -100                                        81.887
miniasm             -39 -> 38     199, -162, 104, -140, -154                  81.231
miniasm             -15 -> 84                                                 79.672
miniasm              81 -> -55    148                                         79.451
miniasm              20 -> 54                                                 79.177
long read            28 -> 51     113, 152, -115, 144, 162, -199, -145        78.196
miniasm              62 -> -46    -139, 156, -151                             78.017
miniasm             -26 -> -51                                                77.024
long read            40 -> 57     201, 79, -203                               76.945
simple long read     89 -> -74    109                                         76.373
long read           -13 -> 80     113, -153, -115, 144, 162, -199, -145       75.379
miniasm              36 -> -66    -102, -127, -114                            74.935
long read            59 -> 81     100, 171, -148                              72.905
miniasm              87 -> -90    188, 194, -182, -178, 185, 192, -149,       72.123
                                  -173                                              
miniasm              48 -> -52                                                68.175
miniasm              45 -> 4                                                  67.770
long read            82 -> 88     167, -137, 92                               65.254
miniasm             -27 -> 82                                                 57.855
long read           -89 -> 16     201, 79, -168                               57.441
long read            86 -> -10    -110, -103, -92, 136, -167, -120, 99,       56.715
                                  -160, 150, -146, 186                              
miniasm              37 -> -91                                                45.599
long read            67 -> -43                                                38.670
long read           -75 -> 90     -102, 128, -114                             34.850
miniasm              21 -> 86     191, 105, -164, 191, 105, -164, -95,        29.976
                                  142, -110, 107, -169, -164, 191                   
miniasm              88 -> 87                                                 27.011

Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/004_bridges_applied.gfa


Bridged assembly graph (2019-09-24 21:10:48)
--------------------------------------------
    The assembly is now mostly finished and no more structural changes will be made. Ideally the assembly graph should now have one contig per replicon and no erroneous contigs (i.e a complete assembly). If there are more contigs, then the assembly is not complete.

Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/005_final_clean.gfa

Component   Segments   Links   Length      N50         Longest segment   Status    
    total          2       1   6,600,643   6,596,779         6,596,779             
        1          1       1   6,596,779   6,596,779         6,596,779     complete
        2          1       0       3,864       3,864             3,864   incomplete


Polishing assembly with Pilon (2019-09-24 21:10:48)
---------------------------------------------------
    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any remaining small-scale errors with the assembly.

Aligning reads to find appropriate insert size range...
Insert size 1st percentile:  145
Insert size 99th percentile: 939

Pilon polish round 1
Unable to polish assembly using Pilon: Pilon encountered an error:
Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500
Genome: 1_polish_input.fasta
Fixing snps, indels
Input genome size: 6596779
Processing 1:1-6596779
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at org.broadinstitute.pilon.PileUp.<init>(PileUp.scala:27)
	at org.broadinstitute.pilon.PileUpRegion.$anonfun$new$1(PileUpRegion.scala:30)
	at org.broadinstitute.pilon.PileUpRegion$$Lambda$42/1211444043.apply$mcVI$sp(Unknown Source)
	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:155)
	at org.broadinstitute.pilon.PileUpRegion.<init>(PileUpRegion.scala:30)
	at org.broadinstitute.pilon.GenomeRegion.initializePileUps(GenomeRegion.scala:148)
	at org.broadinstitute.pilon.GenomeFile.$anonfun$processRegions$4(GenomeFile.scala:111)
	at org.broadinstitute.pilon.GenomeFile.$anonfun$processRegions$4$adapted(GenomeFile.scala:109)
	at org.broadinstitute.pilon.GenomeFile$$Lambda$39/1693847660.apply(Unknown Source)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.parallel.ParIterableLike$Foreach.leaf(ParIterableLike.scala:970)
	at scala.collection.parallel.Task.$anonfun$tryLeaf$1(Tasks.scala:49)
	at scala.collection.parallel.Task$$Lambda$40/879813752.apply$mcV$sp(Unknown Source)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.util.control.Breaks$$anon$1.catchBreak(Breaks.scala:63)
	at scala.collection.parallel.Task.tryLeaf(Tasks.scala:52)
	at scala.collection.parallel.Task.tryLeaf$(Tasks.scala:46)
	at scala.collection.parallel.ParIterableLike$Foreach.tryLeaf(ParIterableLike.scala:967)
	at scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask.compute(Tasks.scala:149)
	at scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask.compute$(Tasks.scala:145)
	at scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.compute(Tasks.scala:436)
	at java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)



Rotating completed replicons (2019-09-24 21:18:47)
--------------------------------------------------
    Any completed circular contigs (i.e. single contigs which have one link connecting end to start) can have their start position changed with altering the sequence. For consistency, Unicycler now searches for a starting gene (dnaA or repA) in each such contig, and if one is found, the contig is rotated to start with that gene on the forward strand.

Segment   Length      Depth   Starting gene     Position   Strand    Identity   Coverage
      1   6,596,779   1.00x   UniRef90_B7V0N6    884,541   forward      99.8%     100.0%

Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/006_rotated.gfa


Assembly complete (2019-09-24 21:22:28)
---------------------------------------
Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/assembly.gfa
Saving /home/r0611244/Desktop/crispr_annotation/assembly/unicycler/PaLo1/assembly.fasta

